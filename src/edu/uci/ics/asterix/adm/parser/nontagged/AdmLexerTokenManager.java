/* Generated By:JavaCC: Do not edit this line. AdmLexerTokenManager.java */
package edu.uci.ics.asterix.adm.parser.nontagged;
import java.io.*;

/** Token Manager. */
public class AdmLexerTokenManager implements AdmLexerConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 5);
      case 41:
         return jjStopAtPos(0, 6);
      case 44:
         return jjStopAtPos(0, 49);
      case 58:
         return jjStopAtPos(0, 50);
      case 91:
         return jjStopAtPos(0, 51);
      case 93:
         return jjStopAtPos(0, 52);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x10L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x20000L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x205100000L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x100000008L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x5500L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x40000000000L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x2L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x114000000000L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x200000000000L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x1000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x400004L);
      case 123:
         jjmatchedKind = 47;
         return jjMoveStringLiteralDfa1_0(0x20000000000000L);
      case 125:
         jjmatchedKind = 48;
         return jjMoveStringLiteralDfa1_0(0x40000000000000L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x1100008L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000420000L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x5500L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x114200000010L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x4L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000002L);
      case 123:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(1, 53);
         break;
      case 125:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(1, 54);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x14000000000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000aL);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000000L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000010L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x1004020000L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x1105500L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000004L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 49:
         return jjMoveStringLiteralDfa4_0(active0, 0x400L);
      case 51:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000L);
      case 54:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L);
      case 56:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(3, 8);
         break;
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x104000000L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000L);
      case 101:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(3, 2);
         else if ((active0 & 0x100000L) != 0L)
         {
            jjmatchedKind = 20;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(3, 22);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(3, 42);
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L);
      case 108:
         if ((active0 & 0x2L) != 0L)
            return jjStopAtPos(3, 1);
         return jjMoveStringLiteralDfa4_0(active0, 0x10L);
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x14000000000L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x8L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000L);
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 50:
         if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(4, 12);
         break;
      case 52:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(4, 14);
         break;
      case 54:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(4, 10);
         break;
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L);
      case 101:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(4, 3);
         return jjMoveStringLiteralDfa5_0(active0, 0x10L);
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000L);
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x200020000L);
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000L);
      case 116:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(4, 32);
         else if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active0, 0x10005000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 51:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000000L);
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x10L);
      case 101:
         if ((active0 & 0x20000L) != 0L)
            return jjStopAtPos(5, 17);
         else if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(5, 33);
         break;
      case 103:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(5, 36);
         break;
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x5000000L);
      case 110:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L);
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(6, 40);
         break;
      case 103:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000L);
      case 109:
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000L);
      case 110:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(6, 4);
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(6, 44);
         break;
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(7, 24);
         break;
      case 108:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000L);
      case 110:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(7, 26);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(8, 45);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 320;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddStates(0, 22);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAddStates(23, 32);
                  else if (curChar == 46)
                     jjCheckNAddTwoStates(51, 60);
                  else if (curChar == 34)
                     jjCheckNAddStates(33, 35);
                  if (curChar == 45)
                     jjCheckNAddStates(36, 38);
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(39, 44);
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(45, 48);
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(49, 54);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(55, 58);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(15, 16);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 19:
               case 20:
                  if (curChar == 34)
                     jjCheckNAddStates(33, 35);
                  break;
               case 22:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 23:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 24:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddStates(23, 32);
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(25, 27);
                  break;
               case 26:
                  if (curChar == 56 && kind > 7)
                     kind = 7;
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(28, 31);
                  break;
               case 29:
                  if (curChar == 54 && kind > 9)
                     kind = 9;
                  break;
               case 30:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(32, 35);
                  break;
               case 33:
                  if (curChar == 50 && kind > 11)
                     kind = 11;
                  break;
               case 34:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(36, 39);
                  break;
               case 37:
                  if (curChar == 52 && kind > 13)
                     kind = 13;
                  break;
               case 38:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAdd(40);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(41, 42);
                  break;
               case 42:
                  if (curChar == 58)
                     jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAdd(43);
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(59, 61);
                  break;
               case 45:
                  if (curChar == 46)
                     jjCheckNAdd(46);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 48:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(49);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAdd(49);
                  break;
               case 50:
                  if (curChar == 46)
                     jjCheckNAdd(51);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAdd(51);
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(62, 65);
                  break;
               case 53:
                  if (curChar == 46)
                     jjCheckNAdd(54);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(66, 68);
                  break;
               case 56:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(57);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(57, 58);
                  break;
               case 59:
                  if (curChar == 46)
                     jjCheckNAdd(60);
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(60, 58);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(0, 22);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(62, 63);
                  break;
               case 63:
                  if (curChar == 45)
                     jjCheckNAdd(64);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 65:
                  if (curChar == 45)
                     jjCheckNAdd(66);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddStates(69, 71);
                  break;
               case 67:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(68);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 69:
                  if (curChar == 58)
                     jjCheckNAdd(70);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(70);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 73:
                  if (curChar == 58)
                     jjCheckNAdd(74);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(74, 75);
                  break;
               case 75:
                  if (curChar == 58)
                     jjCheckNAdd(76);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(72, 75);
                  break;
               case 77:
                  if (curChar == 58)
                     jjCheckNAdd(78);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(76, 78);
                  break;
               case 79:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(80, 81);
                  break;
               case 81:
                  if (curChar == 58)
                     jjCheckNAdd(82);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(82);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(84, 85);
                  break;
               case 85:
                  if (curChar == 45)
                     jjCheckNAdd(86);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(86, 87);
                  break;
               case 87:
                  if (curChar == 45)
                     jjCheckNAdd(88);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(88, 89);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(79, 80);
                  break;
               case 91:
                  if (curChar == 58)
                     jjCheckNAdd(92);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(92, 93);
                  break;
               case 93:
                  if (curChar == 58)
                     jjCheckNAdd(94);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjCheckNAddStates(81, 84);
                  break;
               case 95:
                  if (curChar == 58)
                     jjCheckNAdd(96);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjCheckNAddStates(85, 87);
                  break;
               case 97:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(98);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(98, 99);
                  break;
               case 99:
                  if (curChar == 58)
                     jjCheckNAdd(100);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjCheckNAdd(100);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAdd(102);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(88, 91);
                  break;
               case 105:
                  if (curChar == 46)
                     jjCheckNAdd(106);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(92, 94);
                  break;
               case 108:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(109);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(109, 110);
                  break;
               case 110:
                  if (curChar == 44)
                     jjCheckNAddStates(95, 97);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(98, 101);
                  break;
               case 112:
                  if (curChar == 46)
                     jjCheckNAdd(113);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(102, 104);
                  break;
               case 115:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(116);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(116, 117);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAddStates(105, 107);
                  break;
               case 119:
                  if (curChar == 46)
                     jjCheckNAdd(120);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAddTwoStates(120, 121);
                  break;
               case 122:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(123);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(123);
                  break;
               case 124:
                  if (curChar == 46)
                     jjCheckNAdd(125);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(125);
                  break;
               case 126:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(118, 124);
                  break;
               case 127:
                  if (curChar == 46)
                     jjCheckNAdd(128);
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(128, 117);
                  break;
               case 129:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(111, 127);
                  break;
               case 130:
                  if (curChar == 46)
                     jjCheckNAdd(131);
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(131, 110);
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 133:
                  if (curChar == 46)
                     jjCheckNAdd(134);
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(112, 114);
                  break;
               case 136:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(137);
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(137, 138);
                  break;
               case 138:
                  if (curChar == 44)
                     jjCheckNAddStates(115, 117);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(118, 120);
                  break;
               case 140:
                  if (curChar == 46)
                     jjCheckNAdd(141);
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(141, 142);
                  break;
               case 143:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(144);
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(144);
                  break;
               case 145:
                  if (curChar == 46)
                     jjCheckNAdd(146);
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(146);
                  break;
               case 147:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(139, 145);
                  break;
               case 148:
                  if (curChar == 46)
                     jjCheckNAdd(149);
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(149, 138);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(121, 124);
                  break;
               case 151:
                  if (curChar == 46)
                     jjCheckNAdd(152);
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(125, 127);
                  break;
               case 154:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(155);
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(155, 156);
                  break;
               case 156:
                  if (curChar == 44)
                     jjCheckNAddStates(128, 130);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(131, 134);
                  break;
               case 158:
                  if (curChar == 46)
                     jjCheckNAdd(159);
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(135, 137);
                  break;
               case 161:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(162);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(162, 163);
                  break;
               case 163:
                  if (curChar == 44)
                     jjCheckNAddStates(138, 140);
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(141, 143);
                  break;
               case 165:
                  if (curChar == 46)
                     jjCheckNAdd(166);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(166, 167);
                  break;
               case 168:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(169);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAdd(169);
                  break;
               case 170:
                  if (curChar == 46)
                     jjCheckNAdd(171);
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAdd(171);
                  break;
               case 172:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(164, 170);
                  break;
               case 173:
                  if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(174, 163);
                  break;
               case 175:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(157, 173);
                  break;
               case 176:
                  if (curChar == 46)
                     jjCheckNAdd(177);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(177, 156);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(144, 147);
                  break;
               case 179:
                  if (curChar == 46)
                     jjCheckNAdd(180);
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(148, 150);
                  break;
               case 182:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(183);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(183, 184);
                  break;
               case 184:
                  if (curChar == 44)
                     jjCheckNAddStates(151, 153);
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(154, 157);
                  break;
               case 186:
                  if (curChar == 46)
                     jjCheckNAdd(187);
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(158, 160);
                  break;
               case 189:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(190);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(190, 191);
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(161, 164);
                  break;
               case 193:
                  if (curChar == 46)
                     jjCheckNAdd(194);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(165, 167);
                  break;
               case 196:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(197);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(197, 198);
                  break;
               case 198:
                  if (curChar == 44)
                     jjCheckNAddStates(168, 170);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(171, 173);
                  break;
               case 200:
                  if (curChar == 46)
                     jjCheckNAdd(201);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(201, 202);
                  break;
               case 203:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(204);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAdd(204);
                  break;
               case 205:
                  if (curChar == 46)
                     jjCheckNAdd(206);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAdd(206);
                  break;
               case 207:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(199, 205);
                  break;
               case 208:
                  if (curChar == 46)
                     jjCheckNAdd(209);
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(209, 198);
                  break;
               case 210:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(192, 208);
                  break;
               case 211:
                  if (curChar == 46)
                     jjCheckNAdd(212);
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(212, 191);
                  break;
               case 213:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(185, 211);
                  break;
               case 214:
                  if (curChar == 46)
                     jjCheckNAdd(215);
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(215, 184);
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(174, 177);
                  break;
               case 217:
                  if (curChar == 46)
                     jjCheckNAdd(218);
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(178, 180);
                  break;
               case 220:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(221);
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(221, 222);
                  break;
               case 222:
                  if (curChar == 44)
                     jjCheckNAddStates(181, 183);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(184, 187);
                  break;
               case 224:
                  if (curChar == 46)
                     jjCheckNAdd(225);
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(188, 190);
                  break;
               case 227:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(228, 229);
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(191, 194);
                  break;
               case 231:
                  if (curChar == 46)
                     jjCheckNAdd(232);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(195, 197);
                  break;
               case 234:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(235);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(235, 236);
                  break;
               case 236:
                  if (curChar == 44)
                     jjCheckNAddStates(198, 200);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(201, 204);
                  break;
               case 238:
                  if (curChar == 46)
                     jjCheckNAdd(239);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(205, 207);
                  break;
               case 241:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(242);
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(242, 243);
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(208, 211);
                  break;
               case 245:
                  if (curChar == 46)
                     jjCheckNAdd(246);
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(212, 214);
                  break;
               case 248:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(249);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(249, 250);
                  break;
               case 250:
                  if (curChar == 44)
                     jjCheckNAddStates(215, 217);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAddStates(218, 221);
                  break;
               case 252:
                  if (curChar == 46)
                     jjCheckNAdd(253);
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAddStates(222, 224);
                  break;
               case 255:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(256);
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAddTwoStates(243, 256);
                  break;
               case 257:
                  if (curChar == 46)
                     jjCheckNAdd(258);
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAddTwoStates(243, 258);
                  break;
               case 259:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(251, 257);
                  break;
               case 260:
                  if (curChar == 46)
                     jjCheckNAdd(261);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(261, 250);
                  break;
               case 262:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(244, 260);
                  break;
               case 263:
                  if (curChar == 46)
                     jjCheckNAdd(264);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(264, 243);
                  break;
               case 265:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(237, 263);
                  break;
               case 266:
                  if (curChar == 46)
                     jjCheckNAdd(267);
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(267, 236);
                  break;
               case 268:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(230, 266);
                  break;
               case 269:
                  if (curChar == 46)
                     jjCheckNAdd(270);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 229);
                  break;
               case 271:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(223, 269);
                  break;
               case 272:
                  if (curChar == 46)
                     jjCheckNAdd(273);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(273, 222);
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(225, 228);
                  break;
               case 275:
                  if (curChar == 46)
                     jjCheckNAdd(276);
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(229, 231);
                  break;
               case 278:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(279);
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 280:
                  if (curChar == 44)
                     jjCheckNAddStates(232, 234);
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(235, 238);
                  break;
               case 282:
                  if (curChar == 46)
                     jjCheckNAdd(283);
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(239, 241);
                  break;
               case 285:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(286);
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(286, 287);
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(242, 245);
                  break;
               case 289:
                  if (curChar == 46)
                     jjCheckNAdd(290);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 292:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(293);
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(293, 294);
                  break;
               case 294:
                  if (curChar == 44)
                     jjCheckNAddStates(249, 251);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddStates(252, 254);
                  break;
               case 296:
                  if (curChar == 46)
                     jjCheckNAdd(297);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddTwoStates(297, 298);
                  break;
               case 299:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(300);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAdd(300);
                  break;
               case 301:
                  if (curChar == 46)
                     jjCheckNAdd(302);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAdd(302);
                  break;
               case 303:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(295, 301);
                  break;
               case 304:
                  if (curChar == 46)
                     jjCheckNAdd(305);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(305, 294);
                  break;
               case 306:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(288, 304);
                  break;
               case 307:
                  if (curChar == 46)
                     jjCheckNAdd(308);
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(308, 287);
                  break;
               case 309:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(281, 307);
                  break;
               case 310:
                  if (curChar == 46)
                     jjCheckNAdd(311);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 280);
                  break;
               case 312:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(274, 310);
                  break;
               case 313:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(216, 272);
                  break;
               case 314:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 214);
                  break;
               case 315:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(150, 176);
                  break;
               case 316:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(132, 148);
                  break;
               case 317:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(104, 130);
                  break;
               case 318:
                  if (curChar == 45)
                     jjCheckNAddStates(36, 38);
                  break;
               case 319:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(51, 60);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 80)
                     jjAddStates(255, 272);
                  else if (curChar == 68)
                  {
                     if (kind > 25)
                        kind = 25;
                     jjCheckNAddTwoStates(2, 11);
                  }
                  else if (curChar == 90)
                  {
                     if (kind > 18)
                        kind = 18;
                  }
                  break;
               case 1:
                  if (curChar != 68)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(2, 11);
                  break;
               case 2:
                  if (curChar != 84)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar != 72)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar != 77)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 10:
                  if (curChar == 83 && kind > 25)
                     kind = 25;
                  break;
               case 13:
                  if (curChar != 89)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(2, 14);
                  break;
               case 16:
                  if (curChar != 77)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddTwoStates(17, 2);
                  break;
               case 18:
                  if (curChar != 68)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAdd(2);
                  break;
               case 21:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  jjAddStates(33, 35);
                  break;
               case 27:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 31:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 35:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 39:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 47:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(273, 274);
                  break;
               case 55:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(275, 276);
                  break;
               case 58:
                  if ((0x4000000040L & l) != 0L && kind > 31)
                     kind = 31;
                  break;
               case 71:
                  if (curChar == 90 && kind > 19)
                     kind = 19;
                  break;
               case 83:
                  if (curChar == 90 && kind > 21)
                     kind = 21;
                  break;
               case 89:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 101:
                  if (curChar == 90 && kind > 23)
                     kind = 23;
                  break;
               case 103:
                  if (curChar == 80)
                     jjAddStates(255, 272);
                  break;
               case 107:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(277, 278);
                  break;
               case 114:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(279, 280);
                  break;
               case 117:
                  if (curChar == 82)
                     jjAddStates(281, 283);
                  break;
               case 121:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(284, 285);
                  break;
               case 135:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(286, 287);
                  break;
               case 142:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(288, 289);
                  break;
               case 153:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(290, 291);
                  break;
               case 160:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(292, 293);
                  break;
               case 167:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(294, 295);
                  break;
               case 181:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(296, 297);
                  break;
               case 188:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(298, 299);
                  break;
               case 191:
                  if (curChar == 80)
                     jjAddStates(300, 302);
                  break;
               case 195:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(303, 304);
                  break;
               case 202:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(305, 306);
                  break;
               case 219:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(307, 308);
                  break;
               case 226:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(309, 310);
                  break;
               case 229:
                  if (curChar == 80)
                     jjAddStates(311, 313);
                  break;
               case 233:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(314, 315);
                  break;
               case 240:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(316, 317);
                  break;
               case 243:
                  if (curChar == 80)
                     jjAddStates(318, 320);
                  break;
               case 247:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(321, 322);
                  break;
               case 254:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(323, 324);
                  break;
               case 277:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(325, 326);
                  break;
               case 284:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(327, 328);
                  break;
               case 287:
                  if (curChar == 80)
                     jjAddStates(329, 331);
                  break;
               case 291:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(332, 333);
                  break;
               case 298:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(334, 335);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 22:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(33, 35);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 320 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   25, 27, 28, 31, 32, 35, 36, 39, 40, 62, 63, 72, 73, 84, 85, 44, 
   45, 47, 102, 52, 53, 55, 58, 25, 28, 32, 36, 40, 41, 44, 50, 52, 
   59, 21, 22, 23, 62, 84, 1, 4, 5, 7, 8, 9, 10, 7, 8, 9, 
   10, 12, 13, 15, 16, 17, 18, 15, 16, 17, 18, 44, 45, 47, 52, 53, 
   55, 58, 54, 55, 58, 66, 67, 71, 76, 77, 79, 83, 78, 79, 83, 90, 
   91, 94, 95, 97, 101, 96, 97, 101, 104, 105, 107, 110, 106, 107, 110, 111, 
   127, 129, 111, 112, 114, 117, 113, 114, 117, 118, 119, 121, 132, 133, 135, 138, 
   134, 135, 138, 139, 145, 147, 139, 140, 142, 150, 151, 153, 156, 152, 153, 156, 
   157, 173, 175, 157, 158, 160, 163, 159, 160, 163, 164, 170, 172, 164, 165, 167, 
   178, 179, 181, 184, 180, 181, 184, 185, 211, 213, 185, 186, 188, 191, 187, 188, 
   191, 192, 193, 195, 198, 194, 195, 198, 199, 205, 207, 199, 200, 202, 216, 217, 
   219, 222, 218, 219, 222, 223, 269, 271, 223, 224, 226, 229, 225, 226, 229, 230, 
   231, 233, 236, 232, 233, 236, 237, 263, 265, 237, 238, 240, 243, 239, 240, 243, 
   244, 245, 247, 250, 246, 247, 250, 251, 257, 259, 243, 251, 252, 254, 243, 253, 
   254, 274, 275, 277, 280, 276, 277, 280, 281, 307, 309, 281, 282, 284, 287, 283, 
   284, 287, 288, 289, 291, 294, 290, 291, 294, 295, 301, 303, 295, 296, 298, 104, 
   130, 132, 148, 150, 176, 178, 214, 216, 272, 274, 310, 312, 313, 314, 315, 316, 
   317, 48, 49, 56, 57, 108, 109, 115, 116, 118, 124, 126, 122, 123, 136, 137, 
   143, 144, 154, 155, 161, 162, 168, 169, 182, 183, 189, 190, 192, 208, 210, 196, 
   197, 203, 204, 220, 221, 227, 228, 230, 266, 268, 234, 235, 241, 242, 244, 260, 
   262, 248, 249, 255, 256, 278, 279, 285, 286, 288, 304, 306, 292, 293, 299, 300, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", "\156\165\154\154", "\164\162\165\145", "\146\141\154\163\145", 
"\142\157\157\154\145\141\156", "\50", "\51", null, "\151\156\164\70", null, "\151\156\164\61\66", null, 
"\151\156\164\63\62", null, "\151\156\164\66\64", null, null, "\143\151\162\143\154\145", null, null, 
"\144\141\164\145", null, "\164\151\155\145", null, "\144\141\164\145\164\151\155\145", null, 
"\144\165\162\141\164\151\157\156", null, null, null, null, null, "\146\154\157\141\164", 
"\144\157\165\142\154\145", null, null, "\163\164\162\151\156\147", null, "\160\157\151\156\164", null, 
"\160\157\151\156\164\63\144", null, "\154\151\156\145", null, "\160\157\154\171\147\157\156", 
"\162\145\143\164\141\156\147\154\145", null, "\173", "\175", "\54", "\72", "\133", "\135", "\173\173", "\175\175", 
null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x7ffff7d7ffffffL, 
};
static final long[] jjtoSkip = {
   0x780000000000000L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[320];
private final int[] jjstateSet = new int[640];
protected char curChar;
/** Constructor. */
public AdmLexerTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public AdmLexerTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 320; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
